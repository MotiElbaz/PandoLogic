{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\motie\\\\Desktop\\\\PandoLogic\\\\frontend\\\\src\\\\components\\\\Search.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = _ref => {\n  _s();\n\n  let {\n    allJobTitles,\n    onSearch\n  } = _ref;\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [showOptions, setShowOptions] = useState(false);\n  const options = allJobTitles.map(jobTitle => ({\n    label: jobTitle.jobTitleName,\n    value: jobTitle.jobTitleId\n  }));\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n  };\n\n  const handleInputChange = value => {\n    return value.length > 1 ? setShowOptions(true) : setShowOptions(false);\n  };\n\n  const handleClick = () => {\n    if (selectedOption == null) {\n      return alert('You need to select a job title!');\n    }\n\n    onSearch(selectedOption['value']);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      isClearable: true,\n      value: selectedOption,\n      menuIsOpen: showOptions,\n      options: showOptions ? options : [],\n      placeholder: \"Enter a job title\",\n      onChange: handleChange,\n      onInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"btn-search\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"bgAvIsf9vNDeoF1H3LfiDh/xhcM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/motie/Desktop/PandoLogic/frontend/src/components/Search.tsx"],"names":["React","useState","Select","Search","allJobTitles","onSearch","selectedOption","setSelectedOption","showOptions","setShowOptions","options","map","jobTitle","label","jobTitleName","value","jobTitleId","handleChange","handleInputChange","length","handleClick","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAQA,MAAMC,MAAM,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAAwC;AACtD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMS,OAAc,GAAGN,YAAY,CAACO,GAAb,CAAkBC,QAAD,KAAe;AACrDC,IAAAA,KAAK,EAAED,QAAQ,CAACE,YADqC;AAErDC,IAAAA,KAAK,EAAEH,QAAQ,CAACI;AAFqC,GAAf,CAAjB,CAAvB;;AAKA,QAAMC,YAAY,GAAIX,cAAD,IAAyB;AAC5CC,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,GAFD;;AAIA,QAAMY,iBAAiB,GAAIH,KAAD,IAAmB;AAC3C,WAAOA,KAAK,CAACI,MAAN,GAAe,CAAf,GAAmBV,cAAc,CAAC,IAAD,CAAjC,GAA0CA,cAAc,CAAC,KAAD,CAA/D;AACD,GAFD;;AAIA,QAAMW,WAAW,GAAG,MAAM;AACxB,QAAId,cAAc,IAAI,IAAtB,EAA4B;AAC1B,aAAOe,KAAK,CAAC,iCAAD,CAAZ;AACD;;AACDhB,IAAAA,QAAQ,CAACC,cAAc,CAAC,OAAD,CAAf,CAAR;AACD,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,WAAW,EAAE,IADf;AAEE,MAAA,KAAK,EAAEA,cAFT;AAGE,MAAA,UAAU,EAAEE,WAHd;AAIE,MAAA,OAAO,EAAEA,WAAW,GAAGE,OAAH,GAAa,EAJnC;AAKE,MAAA,WAAW,EAAC,mBALd;AAME,MAAA,QAAQ,EAAEO,YANZ;AAOE,MAAA,aAAa,EAAEC;AAPjB;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAA8B,MAAA,SAAS,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtCD;;GAAMjB,M;;KAAAA,M;AAwCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Select from 'react-select';\r\nimport { JobTitle } from '../entities/JobTitle';\r\n\r\ninterface ISearch {\r\n  allJobTitles: JobTitle[];\r\n  onSearch: Function;\r\n}\r\n\r\nconst Search = ({allJobTitles, onSearch} : ISearch ) => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n\r\n  const options: any[] = allJobTitles.map((jobTitle) => ({\r\n    label: jobTitle.jobTitleName,\r\n    value: jobTitle.jobTitleId,\r\n  }));\r\n\r\n  const handleChange = (selectedOption: any) => {\r\n    setSelectedOption(selectedOption);\r\n  };\r\n\r\n  const handleInputChange = (value: string) => {\r\n    return value.length > 1 ? setShowOptions(true) : setShowOptions(false);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (selectedOption == null) {\r\n      return alert('You need to select a job title!');\r\n    }\r\n    onSearch(selectedOption['value']);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Select\r\n        isClearable={true}\r\n        value={selectedOption}\r\n        menuIsOpen={showOptions}\r\n        options={showOptions ? options : []}\r\n        placeholder=\"Enter a job title\"\r\n        onChange={handleChange}\r\n        onInputChange={handleInputChange}\r\n      />\r\n      <button onClick={handleClick} className=\"btn-search\">Search</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}