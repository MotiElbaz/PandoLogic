{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\motie\\\\Desktop\\\\PandoLogic\\\\frontend\\\\src\\\\pages\\\\JobsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport JobItem from '../components/JobItem';\nimport List from '../components/List';\nimport Search from '../components/Search';\nimport { JobService } from '../services/jobs.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobsPage = () => {\n  _s();\n\n  const jobService = new JobService();\n  const [allJobTitles, setAllJobTitles] = useState([]);\n  const [allJobs, setAllJobs] = useState([]);\n  useEffect(() => {\n    const getJobTitles = async () => {\n      const allJobTitles = await jobService.getJobTitles();\n      setAllJobTitles(allJobTitles);\n    };\n\n    getJobTitles();\n  }, []);\n\n  const onSearch = async id => {\n    const allJobs = await jobService.getJobsForJobTitle(id);\n    setAllJobs(allJobs);\n  };\n\n  const options = allJobTitles.map(jobTitle => ({\n    label: jobTitle.jobTitleName,\n    value: jobTitle.jobTitleId\n  }));\n\n  const renderJobItem = (job, index) => {\n    return /*#__PURE__*/_jsxDEV(JobItem, {\n      job: job\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      options: options,\n      onSearch: onSearch,\n      stringLength: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      allItems: allJobs,\n      renderFunction: renderJobItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JobsPage, \"sC9e0vDfQXG0U3HDzl4Soo9ebCo=\");\n\n_c = JobsPage;\nexport default JobsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"sources":["C:/Users/motie/Desktop/PandoLogic/frontend/src/pages/JobsPage.tsx"],"names":["React","useEffect","useState","JobItem","List","Search","JobService","JobsPage","jobService","allJobTitles","setAllJobTitles","allJobs","setAllJobs","getJobTitles","onSearch","id","getJobsForJobTitle","options","map","jobTitle","label","jobTitleName","value","jobTitleId","renderJobItem","job","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAGA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAMC,UAAU,GAAG,IAAIF,UAAJ,EAAnB;AAEA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAa,EAAb,CAAhD;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAQ,EAAR,CAAtC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMY,YAAY,GAAG,YAAY;AAC/B,YAAMJ,YAAwB,GAAG,MAAMD,UAAU,CAACK,YAAX,EAAvC;AACAH,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD,KAHD;;AAIAI,IAAAA,YAAY;AACb,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAsB;AACrC,UAAMJ,OAAc,GAAG,MAAMH,UAAU,CAACQ,kBAAX,CAA8BD,EAA9B,CAA7B;AACAH,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAHD;;AAKA,QAAMM,OAAc,GAAGR,YAAY,CAACS,GAAb,CAAkBC,QAAD,KAAe;AACrDC,IAAAA,KAAK,EAAED,QAAQ,CAACE,YADqC;AAErDC,IAAAA,KAAK,EAAEH,QAAQ,CAACI;AAFqC,GAAf,CAAjB,CAAvB;;AAKA,QAAMC,aAAa,GAAG,CAACC,GAAD,EAAWC,KAAX,KAA6B;AACjD,wBAAQ,QAAC,OAAD;AAAS,MAAA,GAAG,EAAED;AAAd,OAAwBC,KAAxB;AAAA;AAAA;AAAA;AAAA,YAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,OAAjB;AAA0B,MAAA,QAAQ,EAAEH,QAApC;AAA8C,MAAA,YAAY,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEH,OAAhB;AAAyB,MAAA,cAAc,EAAEa;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAnCD;;GAAMjB,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport JobItem from '../components/JobItem';\r\nimport List from '../components/List';\r\nimport Search from '../components/Search';\r\nimport { Job } from '../entities/Job';\r\nimport { JobTitle } from '../entities/JobTitle';\r\nimport { JobService } from '../services/jobs.service';\r\n\r\nconst JobsPage = () => {\r\n\r\n  const jobService = new JobService();\r\n\r\n  const [allJobTitles, setAllJobTitles] = useState<JobTitle[]>([]);\r\n  const [allJobs, setAllJobs] = useState<Job[]>([])\r\n\r\n  useEffect( () => {\r\n    const getJobTitles = async () => {\r\n      const allJobTitles: JobTitle[] = await jobService.getJobTitles();\r\n      setAllJobTitles(allJobTitles);\r\n    }\r\n    getJobTitles();\r\n  }, []);\r\n\r\n  const onSearch = async (id: number) => {\r\n    const allJobs: Job[] = await jobService.getJobsForJobTitle(id);\r\n    setAllJobs(allJobs);\r\n  }\r\n\r\n  const options: any[] = allJobTitles.map((jobTitle) => ({\r\n    label: jobTitle.jobTitleName,\r\n    value: jobTitle.jobTitleId,\r\n  }));\r\n\r\n  const renderJobItem = (job: Job, index: number) => {\r\n    return (<JobItem job={job} key={index}></JobItem>);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Search options={options} onSearch={onSearch} stringLength={2}></Search>\r\n      <List allItems={allJobs} renderFunction={renderJobItem}></List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobsPage;\r\n"]},"metadata":{},"sourceType":"module"}